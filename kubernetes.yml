apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus-data
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /run/desktop/mnt/host/c/Users/Sebas/Desktop/METLIFE/ApiRequests/volumes/prometheus  # Cambia esta ruta según tus necesidades
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-storage
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /run/desktop/mnt/host/c/Users/Sebas/Desktop/METLIFE/ApiRequests/volumes/grafana  # Cambia esta ruta según tus necesidades
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s  # Intervalo de scraping global

    scrape_configs:
      - job_name: 'api_monitoring'
        static_configs:
          - targets: ['api-monitoring:8000']  # Cambia esto según el puerto y servicio que estés utilizando

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-data
          mountPath: /prometheus
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-data-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "3807"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-storage-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-monitoring
  template:
    metadata:
      labels:
        app: api-monitoring
    spec:
      containers:
      - name: api-monitoring
        image: api/requests
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  type: NodePort
  ports:
    - port: 9090
      targetPort: 9090
      nodePort: 30001  # Cambia el puerto según tus necesidades
  selector:
    app: prometheus

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30002  # Cambia el puerto según tus necesidades
  selector:
    app: grafana

---
apiVersion: v1
kind: Service
metadata:
  name: api-monitoring
spec:
  type: NodePort
  ports:
    - port: 8000
      targetPort: 8000
      nodePort: 30003  # Cambia el puerto según tus necesidades
  selector:
    app: api-monitoring
